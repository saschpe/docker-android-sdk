#!/bin/sh
#
# Script to build container image.
#

SCRIPT_DIR=$(cd -- "$(dirname -- "${0}")" && pwd)
. "${SCRIPT_DIR}/inc.functions"

# Default values
DEFAULT_ANDROID=$(grep android= "${SCRIPT_DIR}/../Dockerfile" | cut -d"=" -f2)
DEFAULT_JDK=$(grep jdk= "${SCRIPT_DIR}/../Dockerfile" | cut -d"=" -f2)
DEFAULT_PLATFORMS="linux/amd64,linux/arm64"

# Functions
usage() {
  printf "Usage: %s [OPTIONS]\n" "${0}"
  printf "Options:\n"
  printf "  --android API_LEVEL (default: %s)\n" "${DEFAULT_ANDROID}"
  printf "  --jdk VERSION       (default: %s)\n" "${DEFAULT_JDK}"
  printf "  --platforms         (default: %s)\n" "${DEFAULT_PLATFORMS}"
  printf "  --push              (optional, upload images to Docker Hub)\n"
  printf "  --verbose           (optional)\n"
  exit 1
}

# Command-line arguments
android="${DEFAULT_ANDROID}"
jdk="${DEFAULT_JDK}"
platforms="${DEFAULT_PLATFORMS}"
cmd_push=
docker_progress=auto
while [ $# -gt 0 ]; do
  key="$1"
  case $key in
  --android)
    android="$2"
    shift # past argument
    ;;
  --jdk)
    jdk="$2"
    shift # past argument
    ;;
  --platforms)
    platforms="$2"
    shift # past argument
    ;;
  --push)
    cmd_push=true
    ;;
  --verbose)
    docker_progress=plain
    ;;
  -h | --help)
    usage
    ;;
  *) # unknown option
    ;;
  esac
  shift # past argument or value
done

# Let's roll
image_tag="saschpe/android-sdk:${android}-jdk${jdk}"

if [ ${cmd_push} ]; then
  approve "Build and push image '${image_tag}'"
  buildx_command="--push"
else
  approve "Build image '${image_tag}'"
fi

safe docker build \
  --platform "${platforms}" \
  ${buildx_command} \
  --build-arg android="${android}" \
  --build-arg jdk="${jdk}" \
  --tag "${image_tag}" \
  --progress "${docker_progress}" \
  .
